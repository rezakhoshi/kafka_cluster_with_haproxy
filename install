i have 3 server (on same vlan)
kafka1_server
kafka2_server
kafka3_server
-----------------firewall----------
for use this kafka_cluster from APP1 (on sever_app) must:
open port 29092 to VIP
open port 9092 to kafkaX_server_ip
------------------------------------zookeeper-for-per-server-------------------------------
wget https://downloads.apache.org/zookeeper/stable/apache-zookeeper-3.8.4-bin.tar.gz
tar -xzf  apache-zookeeper-3.8.4-bin.tar.gz    -->mv  to /opt/zookeeper/  directory

nano /opt/zookeeper/conf/zoo.cfg
dataDir=/var/lib/zookeeper
clientPort=2181
server.1=kafka1_server_ip:2888:3888
server.2=kafka2_server_ip:2888:3888
server.3=kafka3_server_ip:2888:3888
--------------------for-per-server------------------
echo "1" > /var/lib/zookeeper/myid  --> on kafka1_server
echo "2" > /var/lib/zookeeper/myid  --> on kafka2_server
echo "3" > /var/lib/zookeeper/myid  --> on kafka3_server

----------------create service-------
nano /etc/systemd/system/zookeeper.service
[Unit]
Description=Apache Zookeeper
After=network.target

[Service]
Type=forking
ExecStart=/opt/zookeeper/bin/zkServer.sh start
ExecStop=/opt/zookeeper/bin/zkServer.sh stop
ExecReload=/opt/zookeeper/bin/zkServer.sh restart
User=root
Group=root
TimeoutStartSec=30

[Install]
WantedBy=multi-user.target


systemctl daemon-reload
systemctl enable zookeeper
systemctl start  zookeeper
systemctl status  zookeeper

-----------for run zookeeper command-------
 /opt/zookeeper/conf/bin --> *.sh files   

------------------------------------kafka-for-per-server-------------------------------
wget https://downloads.apache.org/kafka/3.9.0/kafka_2.12-3.9.0.tgz
tar -xzf kafka_2.12-3.9.0.tgz           -->mv to /opt/kafka/  directory

nano /opt/kafka/config/server.properties

broker.id=1          #--> (broker.id=1 for kafka1_server, broker.id=2   for kafka2_server ,broker.id=3   for kafka3_server)
listeners=PLAINTEXT://kafka1_server_ip:9092    #-->(insert kafkaX_server_ip:9092)
advertised.listeners=PLAINTEXT://kafka1_server_ip:9092  #--> (insert kafkaX_server_ip:9092)
log.dirs=/var/lib/kafka-logs
zookeeper.connect=kafka1_server_ip:2181,kafka2_server_ip:2181,kafka2_server_ip:2181

-----------for run kafka command-------
/opt/kafka/bin  -->  *.sh files  
----------------create service-------

nano /etc/systemd/system/kafka.service

[Unit]
Description=Apache Kafka server
After=zookeeper.service
Wants=zookeeper.service

[Service]
Type=simple
ExecStart=/opt/kafka/bin/kafka-server-start.sh /opt/kafka/config/server.properties
ExecStop=/opt/kafka/bin/kafka-server-stop.sh
User=root
Group=root
TimeoutStartSec=30
Restart=on-failure

[Install]
WantedBy=multi-user.target



systemctl daemon-reload
systemctl enable kafka
systemctl start  kafka
systemctl status  kafka


------------------------------------kafka-ui-------------------------------
download kafka-ui-api-v0.7.2.jar   -->mv  to /opt/kafka-ui/  directory


----------------create service-------
nano /etc/systemd/system/kafka-ui.service

[Unit]
Description=Kafka UI
After=network.target

[Service]
User=root
ExecStart=/usr/bin/java -jar /opt/kafka-ui/kafka-ui-api-v0.7.2.jar \
  --server.port=9090 \
  --kafka.clusters[0].name=kafka-cluster \
  --kafka.clusters[0].bootstrap-servers=kafka1_server_ip:9092,kafka2_server_ip:9092,kafka3_server_ip:9092
Restart=always
WorkingDirectory=/opt/kafka-ui
StandardOutput=journal
StandardError=journal
SyslogIdentifier=kafka-ui

[Install]
WantedBy=multi-user.target



systemctl daemon-reload
systemctl enable kafka-ui
systemctl start  kafka-ui
systemctl status  kafka-ui
---------------------------------keepalivedip-for-per-server--------------------
sudo apt install keepalived

nano /etc/keepalived/keepalived.conf


vrrp_instance VI_1 {
    state MASTER         #-->(MASTER for kafka1_server   BACKUP for kafka2_server  BACKUP for kafka3_server )
    interface ens224     #--> (interface for vip)
    virtual_router_id 51
    priority 100         #--> (100 for kafka1_server   90 for kafka2_server  80 for kafka3_server )
    advert_int 1
    authentication {
        auth_type PASS
        auth_pass secret
    }
    virtual_ipaddress {
        192.168.1.4   #--> VIP (on range kafkaX_server_ip)
    }
}



systemctl restart  keepalived

------------------------------haproxy-for-per-server-----------------------------
apt install haproxy

add end of file(nano /etc/haproxy/haproxy.cfg)

frontend kafka_front
    bind *:29092    #-->(use deferent of kafka port)
    mode tcp
    option tcplog
    default_backend kafka_back

frontend kafka_ui_front
    bind *:29090   #-->(use deferent of kafka-ui port)
    mode tcp
    option tcplog
    default_backend kafka_ui_back

backend kafka_back
    mode tcp
    balance roundrobin
    option tcp-check
    default-server inter 2s rise 3 fall 2   #inter 2s → Interval between health checks (2 seconds).    rise 3 → Number of successful health checks before considering the server "UP".    fall 2 → Number of failed health checks before considering the server "DOWN".
    server kafka1 kafka1_server_ip:9092 check
    server kafka2 kafka2_server_ip:9092 check
    server kafka3 kafka3_server_ip:9092 check

backend kafka_ui_back
    mode tcp
    balance roundrobin
    option tcp-check
    default-server inter 2s rise 3 fall 2   
    server kafka1 kafka1_server_ip:9090 check
    server kafka2 kafka2_server_ip:9090 check
    server kafka3 kafka3_server_ip:9090 check

systemctl restart haproxy
------------------------------------useful-commands-------------------
on /opt/zookeeper/conf/bin

./zkServer.sh status
./zkCli.sh -server localhost:2181
ls /
ls /brokers/ids
get /brokers/ids/1
get /controller


on /opt/kafka/bin

./kafka-topics.sh --create   --bootstrap-server 192.168.1.4:29092   --replication-factor 3   --partitions 3   --topic health-check-topic-haprxy

